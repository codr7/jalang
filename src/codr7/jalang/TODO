0.4520028
0.14301105

* rename index-if to find
** return pair of value:index
** remove find-if
** update tests
** update aoc

* add support for pair/list/targets (asas:_ ...)
** add head/tail ops
** change functions to macros

* add optional end arg to slice

* convert reduce/map ops to macros like find/index-if

* add ordered maps
** use TreeMap
** add lookup fib test/benchmark

{1 2 3:4}

* add let macro

(let [x 1]
  (+1 x))

* add symbol macro register-count
** check benchmark

* add vm arg to operation toString
** add abstract method to operation
** lookup values for registers
*** value: 15 (...)

* add union types
** Integer|None
** relaxing requirements should not break callers
** strengthening promises should not break callers
** add X? as alias for X|None
** change find-if resultType Any?

* enable using Collections as Sexpr targets
** add find method to CollectionTrait
** lookup argument using find
** add get method
*** throw exception if not found

* check function argument types

* turn pair into collection/sequence type

* add character literals