* finish compilers.UnusedValue
** track w x -> y without read

* add compilers.TailCall
** Add TailCall op

* add aoc 6

* add vararg support
** add splat support when calling
*** use in >=/<= definitions

* add Form.quote/unquote
** change SymbolReader to QuoteReader
*** add QuoteForm

* add while loop

* add splat support

* add support for destructuring pair/list function arguments
** same as let

* hook up type hierarchy

var dropPrefix = 0;
          var dropSuffix = 0;

          for (var v = registers[o.rTarget];;) {
            if (v.type() == Core.pairType) {
              final var p = v.as(Core.pairType);

              if (p.left().type() == Core.noneType) {
                if (target == null) {
                  dropPrefix++;
                } else {
                  dropSuffix++;
                }
              } else {
                target = p.left();
              }

              v = p.right();
            } else {
              if (v.type() == Core.noneType) {
                dropSuffix++;
              } else {
                target = v;
              }

              break;
            }
          }